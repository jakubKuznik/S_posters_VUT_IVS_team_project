Profiling jsme provedli na našem programu pro výpočet směrodatné odchylky (standard_deviation.py).
Cílem bylo zjistit, jak dobře funguje naše knihovna math_lib.py a zda by se některé části programu
daly optimalizovat. Profiling jsme provedli na 10, 100 a 1000 číslech. Vyzkoušeli jsme dva profilovací 
nástroje, z nichž jeden jsme použili pro tvorbu grafů (viz přiložené obrázky) a druhý nám vygeneroval 
pouze textový výstup. 

Z profilingu vyplývá následující:
Knihovna funguje efektivně, a to především díky tomu, že jsou všechny funkce v knihovně maximálně 
minimalistické a v podstatě se jedná o funkce, na které byl cpu navržen, takže je pochopitelné, 
že běží velmi rychle. V matematické knihovně jsme tedy nenalezli žádné místo, které by bylo vhodné 
zoptimalizovat.
Argumenty se parsují pouze na začátku, takže parsovací funkci se také nevyplatí optimalizovat.

Závěr:
Tento malý program v podstatě nelze moc optimalizovat.
Je nutné si však uvědomit, že profiling na tak malých datech je trochu zrádný a je vhodnější 
jej provádět spíše na větších programech a větším objemu dat.


Výstup profileru pro 1000 čísel (cProfiler):

6028 function calls in 0.008 seconds

   Ordered by: call count

   ncalls  tottime  percall  cumtime  percall filename:lineno(function)
     2000    0.000    0.000    0.000    0.000 /math_lib.py:41(add)
     1002    0.006    0.000    0.006    0.000 {built-in method builtins.print}
     1000    0.000    0.000    0.000    0.000 {method 'append' of 'list' objects}
     1000    0.000    0.000    0.000    0.000 /math_lib.py:51(sub)
     1000    0.000    0.000    0.000    0.000 /math_lib.py:113(exp)
        6    0.000    0.000    0.000    0.000 {method 'replace' of 'str' objects}
        3    0.000    0.000    0.000    0.000 {built-in method builtins.len}
        2    0.000    0.000    0.000    0.000 {built-in method _codecs.utf_8_decode}
        2    0.000    0.000    0.000    0.000 /math_lib.py:72(div)
        2    0.000    0.000    0.000    0.000 /codecs.py:319(decode)
        1    0.000    0.000    0.000    0.000 {method 'split' of 'str' objects}
        1    0.000    0.000    0.008    0.008 {built-in method builtins.exec}
        1    0.000    0.000    0.000    0.000 {method 'readlines' of '_io._IOBase' objects}
        1    0.000    0.000    0.008    0.008 profiling.py:4(main)
        1    0.000    0.000    0.001    0.001 /standard_deviation.py:46(separate_numbers)
        1    0.000    0.000    0.000    0.000 /standard_deviation.py:63(mean)
        1    0.001    0.001    0.002    0.002 /standard_deviation.py:72(stdDev)
        1    0.001    0.001    0.008    0.008 /standard_deviation.py:88(main)
        1    0.000    0.000    0.000    0.000 /math_lib.py:85(root)
        1    0.000    0.000    0.008    0.008 <string>:1(<module>)
        1    0.000    0.000    0.000    0.000 {method 'disable' of '_lsprof.Profiler' objects} 
